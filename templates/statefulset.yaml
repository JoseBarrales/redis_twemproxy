apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "fullname" . }}
  replicas: {{ .Values.redis.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.twemproxy.terminationGracePeriodSeconds }}
      imagePullSecrets:
            - name: {{ .Values.imagePullSecrets }}
      volumes:
        - name: conf
          configMap:
            name: {{ template "fullname" . }}
            defaultMode: 0755 
      nodeSelector:
        tier: redis
      containers:
      - name: {{ template "fullname" . }}
        image: {{ .Values.redisImage }}
        command: ["redis-server", "/conf/redis.conf"]
        securityContext:
          runAsUser: 0             
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false      
        livenessProbe:
          initialDelaySeconds: 25
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          exec:
            command:
            - redis-cli
            - -p 
            - "6379"
            - ping
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          exec:
            command:
            - redis-cli
            - -p 
            - "6379"
            - ping       
        resources:
          requests:
            memory: "1700Mi"
            cpu: "500m"
          limits:
            memory: "1700Mi"
            cpu: "500m"    
        ports:
        - name: {{ template "fullname" . }}
          containerPort: 6379